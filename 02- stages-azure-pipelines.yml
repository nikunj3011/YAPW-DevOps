# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  jobs:
  - job: FirstJob
    steps:
    - bash: echo Build FirstJobBuild
    - bash: echo $(PipelineLevelVariable)
    - bash: echo $(Build.BuildNumber)
    - bash: echo $(Build.BuildId)
    - bash: echo $(Build.SourceBranchName)
    - bash: echo $(Build.SourceDirectory)
    - bash: echo $(Build.DefaultWorkingDirectory)
    - bash: ls -R $(Build.ArtifactStaging)
    - bash: echo $(Build.ArtifactStagingDirectory)
    - bash: java -version
    - bash: node --version
    - bash: python --version
    - bash: mvn -version
    - bash: ls -R $(Build.ArtifactStagingDirectory)
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: |
          **/*.yaml
          **/*.tf
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - bash: ls -R $(Build.ArtifactStagingDirectory)
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
  # - job: SecondJob
  #     steps:
  #     - bash: echo Build SecondJobBuild
  #     - stage: QADeploy
  #       dependsOn: Build
  #       jobs:
  #       - job: FirstJob
  #         steps:
  #         - bash: echo Build FirstJobQA
  #     - stage: DevDeploy
  #       variables:
  #         environment: Dev
  #       dependsOn: Build
  #       jobs:
  #       - job: FirstJob
  #         steps:
  #         - bash: echo Build $(environment) DeployJob
  #     - stage: ProdDeploy
  #       dependsOn: 
  #       - QADeploy
  #       - DevDeploy
  #       jobs:
  #       - job: FirstJob
  #         steps:
  #         - bash: echo Build FirstJobProd

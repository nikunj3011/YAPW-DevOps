@using YAPW.Models;
@model VideoDataModel
@{
    Layout = null;
    var VideosFeatured = ViewBag.VideosFeatured as List<VideoDataModel>;
    var VideosRecentlyAdded = ViewBag.VideosRecentlyAdded as List<VideoDataModel>;
    var VideosRandom = ViewBag.VideosRandom as List<VideoDataModel>;
    var VideosSameBrand = ViewBag.VideosSameBrand as List<VideoDataModel>;
}
<head>
    <style>

        /* :active, :hover, :focus {
            outline: 0 !important;
            outline-offset: 0;
        }

        ::before,
        ::after {
            position: absolute;
            content: "";
        }

        .btnTag {
          position: relative;
          display: inline-block;
          width: auto; height: auto;
          background-color: transparent;
          border: none;
          cursor: pointer;
          margin: 0px 25px 15px;
          min-width: 150px;
        }

            .btnTag span {
            position: relative;
            display: inline-block;
            font-size: 14px;
            font-weight: bold;
            letter-spacing: 2px;
            text-transform: uppercase;
            top: 0; left: 0;
            width: 100%;
            padding: 15px 20px;
            transition: 0.3s;
          }

        .btn-1::before {
          background-color: rgb(28, 31, 30);
          transition: 0.3s ease-out;
        }
        .btn-1 span {
          color: rgb(255,255,255);
          border: 1px solid rgb(28, 31, 30);
          transition: 0.2s 0.1s;
        }
        .btn-1 span:hover {
          color: rgb(28, 31, 30);
          transition: 0.2s 0.1s;
        }


        .btn.hover-filled-slide-right::before {
          top:0; bottom: 0; right: 0;
          height: 100%; width: 100%;
        }
        .btn.hover-filled-slide-right:hover::before {
          width: 0%;
        } */
        figure.snip1466 {
            position: relative;
            overflow: hidden;
            margin: 10px;
            width: 100%;
            color: #ffffff;
            font-size: 16px;
            background-color: #000000;
            -webkit-box-sizing: border-box;
            box-sizing: border-box;
            -webkit-transform: translateZ(0);
            transform: translateZ(0);
            text-align: center;
            font-size: 70px;
        }

            figure.snip1466 *,
            figure.snip1466 *:before,
            figure.snip1466 *:after {
                -webkit-transition: all 0.4s ease;
                transition: all 0.4s ease;
            }

            figure.snip1466 img {
                max-width: 100%;
                backface-visibility: hidden;
                vertical-align: top;
            }

            figure.snip1466 i {
                position: absolute;
                line-height: 50px;
                width: 50px;
                text-align: center;
                font-size: 28px;
                z-index: 1;
                bottom: 0;
                right: 0;
                -webkit-transform: translate(100%, 100%);
                transform: translate(100%, 100%);
            }

                figure.snip1466 i:after {
                    position: absolute;
                    bottom: 3px;
                    right: 3px;
                    content: '';
                    width: 0;
                    height: 0;
                    border-style: solid;
                    border-width: 0 0 75px 75px;
                    border-color: transparent transparent #34495e;
                    z-index: -1;
                }

            figure.snip1466 a {
                position: absolute;
                top: 0;
                bottom: 0;
                left: 0;
                right: 0;
                z-index: 1;
            }

            figure.snip1466:hover img,
            figure.snip1466.hover img {
                zoom: 1;
                filter: alpha(opacity=70);
                -webkit-opacity: 0.7;
                opacity: 0.7;
                -webkit-transform: scale(1.2);
                transform: scale(1.2);
            }

            figure.snip1466:hover i,
            figure.snip1466.hover i {
                -webkit-transform: translate(0, 0);
                transform: translate(0, 0);
            }
        ul {
            list-style: none;
        }

        .tabs {
            width: 80%;
            height: 100px;
            margin: auto;
            margin-top: 50px;
            display: flex;
            align-items: center;
            overflow: hidden;
            border-radius: 10px;
            -webkit-border-radius: 10px;
            -moz-border-radius: 10px;
            -ms-border-radius: 10px;
            -o-border-radius: 10px;
        }

        .tabs li {
            width: 25%;
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #c4cfde;
            font-family: 'Poppins', sans-serif;
            transition: .5s;
            -webkit-transition: .5s;
            -moz-transition: .5s;
            -ms-transition: .5s;
            -o-transition: .5s;
            cursor: pointer;
        }

        .tabs li:hover {
            color: #f9004d;
            position: relative;
            z-index: 1;
            border-radius: 10px;
        }

        .active {
            color: #f9004d !important;
            position: relative;
            z-index: 1;
            border-radius: 10px;
        }

        .contents {
            width: 80%;
            margin: auto;
            margin-top: 50px;
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
            gap: 30px;
        }

        .box {
            gap: 20px;
            border-radius: 10px;
            -webkit-border-radius: 10px;
            -moz-border-radius: 10px;
            -ms-border-radius: 10px;
            -o-border-radius: 10px;
            padding: 20px;
            width: 100%;
            animation: moving 1s ease;
            -webkit-animation: moving 1s ease;
        }

        .box img {
            width: 50%;
            border-radius: 10px;
            -webkit-border-radius: 10px;
            -moz-border-radius: 10px;
            -ms-border-radius: 10px;
            -o-border-radius: 10px;
        }

        .box h3 {
            color: #c4cfde;
            font-family: 'Poppins', sans-serif;
            font-size: 2rem;
            margin-bottom: 20px;
        }

        .box p {
            color: #c4cfde;
            opacity: .5;
            font-family: 'Poppins', sans-serif;
            font-size: 1rem;
        }

        .show {
            display: flex;
        }

        .hide {
            display: none;
        }

        @@keyframes moving {
            from {
                transform: translateX(-50px);
                -webkit-transform: translateX(-50px);
                -moz-transform: translateX(-50px);
                -ms-transform: translateX(-50px);
                -o-transform: translateX(-50px);
                opacity: 0;
            }

            to {
                transform: translateX(0px);
                -webkit-transform: translateX(0px);
                -moz-transform: translateX(0px);
                -ms-transform: translateX(0px);
                -o-transform: translateX(0px);
                opacity: 1;
            }
        }
        /* Import Google font - Poppins */
        .container2, .video-controls, .video-timer, .options {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        #blurred {
            position: absolute;
            align-self: center;
            filter: blur(100px);
            width: 130%;
            max-width: 1200px;
            aspect-ratio: 16 / 9;
            opacity: 0.5;
        }

        .container2 {
            width: 98%;
            user-select: none;
            overflow: hidden;
            max-width: 900px;
            border-radius: 5px;
            background: #000;
            aspect-ratio: 16 / 9;
            position: relative;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }

            .container2.fullscreen {
                max-width: 100%;
                width: 100%;
                height: 100vh;
                border-radius: 0px;
            }

        .wrapper2 {
            position: absolute;
            left: 0;
            right: 0;
            z-index: 1;
            opacity: 0;
            bottom: -15px;
            transition: all 0.08s ease;
        }

        .container2.show-controls .wrapper2 {
            opacity: 1;
            bottom: 0;
            transition: all 0.13s ease;
        }

        .wrapper2::before {
            content: "";
            bottom: 0;
            width: 100%;
            z-index: -1;
            position: absolute;
            height: calc(100% + 35px);
            pointer-events: none;
            background: linear-gradient(to top, rgba(0, 0, 0, 0.7), transparent);
        }

        .video-timeline {
            height: 7px;
            width: 100%;
            cursor: pointer;
        }

            .video-timeline .progress-area {
                height: 3px;
                position: relative;
                background: rgba(255, 255, 255, 0.6);
            }

        .progress-area span {
            position: absolute;
            left: 50%;
            top: -25px;
            font-size: 13px;
            color: #fff;
            pointer-events: none;
            transform: translateX(-50%);
        }

        .progress-area .progress-bar {
            width: 0%;
            height: 100%;
            position: relative;
            background: #2289ff;
        }

        .progress-bar::before {
            content: "";
            right: 0;
            top: 50%;
            height: 13px;
            width: 13px;
            position: absolute;
            border-radius: 50%;
            background: #2289ff;
            transform: translateY(-50%);
        }

        .progress-bar::before, .progress-area span {
            display: none;
        }

        .video-timeline:hover .progress-bar::before,
        .video-timeline:hover .progress-area span {
            display: block;
        }

        .wrapper2 .video-controls {
            padding: 5px 20px 10px;
        }

        .video-controls .options {
            width: 100%;
        }

            .video-controls .options:first-child {
                justify-content: flex-start;
            }

            .video-controls .options:last-child {
                justify-content: flex-end;
            }

        .options button {
            height: 40px;
            width: 40px;
            font-size: 19px;
            border: none;
            cursor: pointer;
            background: none;
            color: #efefef;
            border-radius: 3px;
            transition: all 0.3s ease;
        }

            .options button :where(i, span) {
                height: 100%;
                width: 100%;
                line-height: 40px;
            }

            .options button:hover :where(i, span) {
                color: #fff;
            }

            .options button:active :where(i, span) {
                transform: scale(0.9);
            }

            .options button span {
                font-size: 23px;
            }

        .options input {
            height: 4px;
            margin-left: 3px;
            max-width: 75px;
            accent-color: #0078FF;
        }

        .options .video-timer {
            color: #efefef;
            margin-left: 15px;
            font-size: 14px;
        }

        .video-timer .separator {
            margin: 0 5px;
            font-size: 16px;
            font-family: "Open sans";
        }

        .playback-content {
            display: flex;
            position: relative;
        }

            .playback-content .speed-options {
                position: absolute;
                list-style: none;
                left: -40px;
                bottom: 40px;
                width: 95px;
                overflow: hidden;
                opacity: 0;
                border-radius: 4px;
                pointer-events: none;
                background: rgba(255, 255, 255, 0.9);
                box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
                transition: opacity 0.13s ease;
            }

                .playback-content .speed-options.show {
                    opacity: 1;
                    pointer-events: auto;
                }

        .speed-options li {
            cursor: pointer;
            color: #000;
            font-size: 14px;
            margin: 2px 0;
            padding: 5px 0 5px 15px;
            transition: all 0.1s ease;
        }

            .speed-options li:where(:first-child, :last-child) {
                margin: 0px;
            }

            .speed-options li:hover {
                background: #dfdfdf;
            }

            .speed-options li.active {
                color: #fff;
                background: #3e97fd;
            }

        .container2 video {
            width: 100%;
        }

        @@media screen and (max-width: 540px) {
            .wrapper2 .video-controls {
                padding: 3px 10px 7px;
            }

            .options input, .progress-area span {
                display: none !important;
            }

            .options button {
                height: 30px;
                width: 30px;
                font-size: 17px;
            }

            .options .video-timer {
                margin-left: 5px;
            }

            .video-timer .separator {
                font-size: 14px;
                margin: 0 2px;
            }

            .options button :where(i, span) {
                line-height: 30px;
            }

            .options button span {
                font-size: 21px;
            }

            .options .video-timer, .progress-area span, .speed-options li {
                font-size: 12px;
            }

            .playback-content .speed-options {
                width: 75px;
                left: -30px;
                bottom: 30px;
            }

            .speed-options li {
                margin: 1px 0;
                padding: 3px 0 3px 10px;
            }

            .right .pic-in-pic {
                display: none;
            }

            #blurred {
                display: none;
            }
        }

        .blur {
            width: 150%;
            height: 150%;
            background-color: rgba(0,0, 0, 0.5);
            filter: blur(25px);
            position: absolute;
            left: 0;
            top: 0;
        }

        .git-icon {
            position: absolute;
            width: 50px;
            height: 50px;
            background-color: #fff;
            right: 20px;
            top: 20px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: #eee 2px 3px 10px;
            z-index: 2;
        }

            .git-icon img {
                height: 30px;
                width: 30px;
                border-radius: 15px;
            }

            .git-icon:hover {
                background-color: #DDD;
                box-shadow: #eee 3px 5px 10px;
            }
    </style>
</head>
<div class="row " style="padding:7%;">
    <div class="col-lg-12 ">

        <div class="card" style="width:auto; height:auto;background-color:#0C0B0D;border-radius:10px; padding:10px">
            <div class="row">
                <div class="col-lg-9 col-md-9 col-sm-12 col-12 videowrapper2">
                    @*/*background-size: 110% 135%;*/*@
                    <video src="@Model.VideoInfo.VideoUrl" class="videoCustom" poster="@Model.VideoInfo.Cover" id="blurred"></video>
                    <div class="container2 show-controls">
                        <div class="wrapper2">
                            <div class="video-timeline">
                                <div class="progress-area">
                                    <span>00:00</span>
                                    <div class="progress-bar"></div>
                                </div>
                            </div>
                            <ul class="video-controls">
                                <li class="options left">
                                    <button class="volume"><i class="high fa-solid fa-volume-high"></i></button>
                                    <input class="inputVolume" type="range" min="0" max="1" step="any">
                                    <div class="video-timer">
                                        <p class="current-time">00:00</p>
                                        <p class="separator"> / </p>
                                        <p class="video-duration">00:00</p>
                                    </div>
                                </li>
                                <li class="options center">
                                    <button class="skip-backward"><i class="skip-backward-icon fas fa-backward"></i></button>
                                    <button class="play-pause"><i class="play-pause-icon fas fa-play"></i></button>
                                    <button class="skip-forward"><i class="skip-forward-icon fas fa-forward"></i></button>
                                </li>
                                <li class="options right">
                                    <div class="playback-content">
                                        <button class="playback-speed"><span class="playback-speed-span"><i class="play-pause-icon fas fa-play"></i> </span></button>
                                        <ul class="speed-options">
                                            <li data-speed="2">2x</li>
                                            <li data-speed="1.5">1.5x</li>
                                            <li data-speed="1" class="active">Normal</li>
                                            <li data-speed="0.75">0.75x</li>
                                            <li data-speed="0.5">0.5x</li>
                                        </ul>
                                    </div>
                                    <button class="fullscreen"><i class="fullscreen-icon fa-solid fa-expand"></i></button>
                                </li>
                            </ul>
                        </div>
                        <video src="@Model.VideoInfo.VideoUrl" class="videoCustom" poster="@Model.VideoInfo.Poster"></video>
                    </div>
                </div>
                <div class="col-lg-3 col-md-3 col-sm-12 col-12 ">
                    <div class="row">
                        <div class="col-lg-12 col-md-12 col-sm-12 col-12" style="padding-top:12%;text-align:center;">
                            <h3 style="font-weight:800; opacity:0.8"><i>@Model.Brand.Name 's</i></h3>

                            <p style="font-size:30px;color:white; ">
                                @*font-family: 'Londrina Outline', cursive;/*max-height:120px; overflow-x:scroll;overflow-y:hidden*/*@
                                <b>@Model.Name</b>
                            </p>
                        </div>
                        <div class="col-lg-12 col-md-12 col-sm-12 col-12">
                            <div style="text-align:right; font-size:30px; color:#EA2E2E"><i class="fa-solid fa-star"></i> 7.8 </div>
                            <div><i class="fa-regular fa-calendar"></i> @Model.VideoInfo.ReleaseDate.Month @Model.VideoInfo.ReleaseDate.Year</div>
                            <div><i class="fa-regular fa-clock"></i> @Model.VideoInfo.VideoLength</div>
                            <div><i class="fa-regular fa-eye"></i> @Model.VideoInfo.Views</div>
                            <div>
                                <b>
                                    <i class="fa-solid fa-tags"></i>
                                    @foreach (var category in Model.Categories)
                                    {
                                        <a style="color:#BD421B;" href="Main/Videos/Search?category=@category.Name" class="ajaxLoad btnTag btn-1 hover-filled-slide-right">@category.Name</a>
                                    }
                                </b>
                            </div>
                            <div id="description" style="font-size:15px;opacity:0.9; ">
                                @*max-height:180px;overflow:scroll;*@
                                @Model.Description
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-12 col-md-12 col-sm-12 col-12 " style="padding-top:4%">
                    @*<h3 style="font-weight:800; opacity:0.8"><i>Recommendations</i></h3>*@

                    <ul class="tabs">
                        <li class="active" data-id="0">Featured</li>
                        <li data-id="1">Latest</li>
                        <li data-id="2">Random</li>
                        <li data-id="3">Same Brand</li>
                        @*<li data-id="1">All category random video</li>*@
                    </ul>

                    <div class="contents">
                        <div class="box show" data-content="0">
                            <div class="row">
                                <div class="col-lg-3 col-md-3 col-sm-12 col-12" style="text-align:center">
                                    <h1>Featured</h1>
                                </div>
                                @foreach (var item in VideosFeatured)
                                {
                                    <div class="col-lg-3 col-md-3 col-sm-12 col-12" style="text-align:center">
                                        <figure class="snip1466">
                                            <img src=@item.VideoInfo.Cover alt="sample52" />
                                            <a href="Main/Videos/Name/@item.VideoInfo.VideoUrl" class="nav-link ajaxLoad" style="padding-top:30px; background-image:linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.2) )">@*<i class="fa-solid fa-circle-play"></i>*@</a>
                                            <p style="font-size:large"> <span>@item.Name</span></p>
                                        </figure>
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="box hide" data-content="1">
                            <div class="row">
                                <div class="col-lg-3 col-md-3 col-sm-12 col-12" style="text-align:center">
                                    <h1>Latest</h1>
                                </div>
                                @foreach (var item in VideosRecentlyAdded)
                                {
                                    <div class="col-lg-3 col-md-3 col-sm-12 col-12" style="text-align:center">
                                        <figure class="snip1466">
                                            <img src=@item.VideoInfo.Cover alt="sample52" />
                                            <a href="Main/Videos/Name/@item.VideoInfo.VideoUrl" class="nav-link ajaxLoad" style="padding-top:30px; background-image:linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.2) )">@*<i class="fa-solid fa-circle-play"></i>*@</a>
                                            <p style="font-size:large"> <span>@item.Name</span></p>
                                        </figure>
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="box hide" data-content="2">
                            <div class="row">
                                <div class="col-lg-3 col-md-3 col-sm-12 col-12" style="text-align:center">
                                    <h1>Random</h1>
                                </div>
                                @foreach (var item in VideosRandom)
                                {
                                    <div class="col-lg-3 col-md-3 col-sm-12 col-12" style="text-align:center">
                                        <figure class="snip1466">
                                            <img src=@item.VideoInfo.Cover alt="sample52" />
                                            <a href="Main/Videos/Name/@item.VideoInfo.VideoUrl" class="nav-link ajaxLoad" style="padding-top:30px; background-image:linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.2) )">@*<i class="fa-solid fa-circle-play"></i>*@</a>
                                            <p style="font-size:large"> <span>@item.Name</span></p>
                                        </figure>
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="box hide" data-content="3">
                            <div class="row">
                                <div class="col-lg-3 col-md-3 col-sm-12 col-12" style="text-align:center">
                                    <h1>Same Brand</h1>
                                </div>
                                @foreach (var item in VideosSameBrand)
                                {
                                    <div class="col-lg-3 col-md-3 col-sm-12 col-12" style="text-align:center">
                                        <figure class="snip1466">
                                            <img src=@item.VideoInfo.Cover alt="sample52" />
                                            <a href="Main/Videos/Name/@item.VideoInfo.VideoUrl" class="nav-link ajaxLoad" style="padding-top:30px; background-image:linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.2) )">@*<i class="fa-solid fa-circle-play"></i>*@</a>
                                            <p style="font-size:large"> <span>@item.Name</span></p>
                                        </figure>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    $(document).ready(async function () {
        console.log("s");
        'use strict';
        const tabs = document.querySelectorAll('[data-id]');
        const contents = document.querySelectorAll('[data-content]');
        let id = 0;

        tabs.forEach(function (tab) {
            tab.addEventListener('click', function () {
                tabs[id].classList.remove('active');
                tab.classList.add('active');
                id = tab.getAttribute('data-id');
                contents.forEach(function (box) {
                    box.classList.add('hide');
                    if (box.getAttribute('data-content') == id) {
                        box.classList.remove('hide');
                        box.classList.add('show');
                    }
                });
            });
        });

        const container = document.querySelector(".container2"),
            blurvid = document.querySelector(".videoCustom"),
            mainVideo = container.querySelector(".videoCustom"),
            videoTimeline = container.querySelector(".video-timeline"),
            progressBar = container.querySelector(".progress-bar"),
            volumeBtn = container.querySelector(".volume .high"),
            volumeSlider = container.querySelector(".left .inputVolume");
            currentVidTime = container.querySelector(".current-time"),
            videoDuration = container.querySelector(".video-duration"),
            skipBackward = container.querySelector(".skip-backward .skip-backward-icon"),
            skipForward = container.querySelector(".skip-forward .skip-forward-icon"),
            playPauseBtn = container.querySelector(".play-pause .play-pause-icon"),
            speedBtn = container.querySelector(".playback-speed .playback-speed-span"),
            speedOptions = container.querySelector(".speed-options"),
            fullScreenBtn = container.querySelector(".fullscreen .fullscreen-icon");
        let timer;

        const hideControls = () => {
            if (mainVideo.paused) return;
            timer = setTimeout(() => {
                container.classList.remove("show-controls");
            }, 3000);
        }
        hideControls();
        blurvid.volume = 0;
        container.addEventListener("mousemove", () => {
            container.classList.add("show-controls");
            clearTimeout(timer);
            hideControls();
        });

        const formatTime = time => {
            let seconds = Math.floor(time % 60),
                minutes = Math.floor(time / 60) % 60,
                hours = Math.floor(time / 3600);

            seconds = seconds < 10 ? `0${seconds}` : seconds;
            minutes = minutes < 10 ? `0${minutes}` : minutes;
            hours = hours < 10 ? `0${hours}` : hours;

            if (hours == 0) {
                return `${minutes}:${seconds}`
            }
            return `${hours}:${minutes}:${seconds}`;
        }

        videoTimeline.addEventListener("mousemove", e => {
            let timelineWidth = videoTimeline.clientWidth;
            let offsetX = e.offsetX;
            let percent = Math.floor((offsetX / timelineWidth) * mainVideo.duration);
            const progressTime = videoTimeline.querySelector("span");
            offsetX = offsetX < 20 ? 20 : (offsetX > timelineWidth - 20) ? timelineWidth - 20 : offsetX;
            progressTime.style.left = `${offsetX}px`;
            progressTime.innerText = formatTime(percent);
        });

        videoTimeline.addEventListener("click", e => {
            let timelineWidth = videoTimeline.clientWidth;
            mainVideo.currentTime = (e.offsetX / timelineWidth) * mainVideo.duration;
            blurvid.currentTime = (e.offsetX / timelineWidth) * mainVideo.duration;
        });

        mainVideo.addEventListener("timeupdate", e => {
            let { currentTime, duration } = e.target;
            let percent = (currentTime / duration) * 100;
            progressBar.style.width = `${percent}%`;
            currentVidTime.innerText = formatTime(currentTime);
        });

        mainVideo.addEventListener("loadeddata", () => {
            videoDuration.innerText = formatTime(mainVideo.duration);
        });

        const draggableProgressBar = e => {
            let timelineWidth = videoTimeline.clientWidth;
            progressBar.style.width = `${e.offsetX}px`;
            mainVideo.currentTime = (e.offsetX / timelineWidth) * mainVideo.duration;
            blurvid.currentTime = (e.offsetX / timelineWidth) * mainVideo.duration;
            currentVidTime.innerText = formatTime(mainVideo.currentTime);
        }

        volumeBtn.addEventListener("click", () => {
            if (!volumeBtn.classList.contains("fa-volume-high")) {
                mainVideo.volume = 0.5;
                volumeBtn.classList.replace("fa-volume-xmark", "fa-volume-high");
            } else {
                mainVideo.volume = 0.0;
                volumeBtn.classList.replace("fa-volume-high", "fa-volume-xmark");
            }
            volumeSlider.value = mainVideo.volume;
        });

        volumeSlider.addEventListener("input", e => {
            mainVideo.volume = e.target.value;
            if (e.target.value == 0) {
                return volumeBtn.classList.replace("fa-volume-high", "fa-volume-xmark");
            }
            volumeBtn.classList.replace("fa-volume-xmark", "fa-volume-high");
        });

        speedOptions.querySelectorAll("li").forEach(option => {
            option.addEventListener("click", () => {
                mainVideo.playbackRate = option.dataset.speed;
                blurvid.playbackRate = option.dataset.speed;
                speedOptions.querySelector(".active").classList.remove("active");
                option.classList.add("active");
            });
        });

        document.addEventListener("click", e => {
            if (e.target.tagName !== "SPAN" || e.target.className !== "material-symbols-rounded") {
                speedOptions.classList.remove("show");
            }
        });

        fullScreenBtn.addEventListener("click", () => {
            container.classList.toggle("fullscreen");
            if (document.fullscreenElement) {
                fullScreenBtn.classList.replace("fa-compress", "fa-expand");
                return document.exitFullscreen();
            }
            fullScreenBtn.classList.replace("fa-expand", "fa-compress");
            container.requestFullscreen();
        });

        speedBtn.addEventListener("click", () => speedOptions.classList.toggle("show"));
        skipBackward.addEventListener("click", () => { mainVideo.currentTime -= 5; blurvid.currentTime -= 5 });
        skipForward.addEventListener("click", () => { mainVideo.currentTime += 5; blurvid.currentTime += 5 });
        mainVideo.addEventListener("play", () => playPauseBtn.classList.replace("fa-play", "fa-pause"));
        mainVideo.addEventListener("pause", () => playPauseBtn.classList.replace("fa-pause", "fa-play"));
        videoTimeline.addEventListener("mousedown", () => videoTimeline.addEventListener("mousemove", draggableProgressBar));
        document.addEventListener("mouseup", () => videoTimeline.removeEventListener("mousemove", draggableProgressBar));
        playPauseBtn.addEventListener("click", () => { mainVideo.paused ? mainVideo.play() : mainVideo.pause(); blurvid.paused ? blurvid.play() : blurvid.pause() });
        var answer = document.getElementById("result");
        if (navigator.userAgent.match(/Android/i)
            || navigator.userAgent.match(/webOS/i)
            || navigator.userAgent.match(/iPhone/i)
            || navigator.userAgent.match(/iPad/i)
            || navigator.userAgent.match(/iPod/i)
            || navigator.userAgent.match(/BlackBerry/i)
            || navigator.userAgent.match(/Windows Phone/i)) {
            blurvid.remove()
        } else {
        }
    });
</script>


